import kanbanAPI from "/public/kanbanAPI";
import stopwatch from "/public/stopwatch";


const form = document.getElementById("taskform");
const button = document.querySelector("#taskform > button")
var taskInput = document.getElementById("taskInput");
var tasklist = document.getElementById("tasklist");

var dueDateInput = document.getElementById("dueDateInput");
var completionTimeInput = document.getElementById("completionTimeInput");
var estimatedTimeInput = document.getElementById("estimatedTimeInput");
var priorityInput = document.getElementById("priorityInput");

form.addEventListener("submit", function(event){
  event.preventDefault();
  let task = taskInput.value;
  let dueDate = dueDateInput.value;
  let completionTime = completionTimeInput.value;
  let estimatedTime = estimatedTimeInput.value;
  let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;
  addTask(task, dueDate, estimatedTime, priorityRating, completionTime, false);
  console.log(taskList);
})

var taskListArray = [];

function addTask(taskDescription, dueDate, estimatedTime, priorityRating, completionTime, completionStatus) {
  let d = new Date();
  let dateCreated = d.getFullYear();
  let task = {
    taskDescription,
    dueDate,
    dateCreated,
    estimatedTime,
    completionTime,
    priorityRating,
    estimatedTime,
    completionStatus
  };
  taskListArray.push(task);
  renderTask(task);
}

function renderTask(task){
  // Create HTML elements
  let item = document.createElement("li");
  item.innerHTML = "<p>" + task.taskDescription + " " + task.priorityRating + " " + task.dueDate + "</p>";

  tasklist.appendChild(item);

  // Extra Task DOM elements
  let delButton = document.createElement("button");
  let delButtonText = document.createTextNode("Delete Task");
  delButton.appendChild(delButtonText);
  item.appendChild(delButton);


  // Event Listeners for DOM elements
  delButton.addEventListener("click", function(event){
    event.preventDefault();
    item.remove();
  })

  // Clear the input form
  form.reset();
}

//Image Gallery - Inspo https://www.javatpoint.com/random-image-generator-in-javascript
function getRandImg() {  
  //declare an array to store the images  
  var randImg = new Array();  
    
  //insert the URL of images in array  
  randImg[0] = "https://images.pexels.com/photos/858115/pexels-photo-858115.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500";  
  randImg[1] = "http://www.petsworld.in/blog/wp-content/uploads/2014/09/running-cute-puppies.jpg";  
  randImg[2] = "https://images.pexels.com/photos/142497/pexels-photo-142497.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500";  
  randImg[3] = "https://images.unsplash.com/photo-1543877087-ebf71fde2be1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60";  
  randImg[4] = "https://wi.wallpapertip.com/wsimgs/156-1565522_puppies-desktop-wallpaper-desktop-background-puppies.jpg"; 
  randImg[5] = "https://images.unsplash.com/photo-1501265976582-c1e1b0bbaf63?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60";  
    
  //generate a number and provide to the image to generate randomly  
  var number = Math.floor(Math.random()*randImg.length);  
    
  //return the images generated by a random number  
  return document.getElementById("result").innerHTML = '<img src="'+randImg[number]+'" />';  
}


// Music Popup Player - source https://codepen.io/DedaloD/pen/YWxooz
// Example 1: From an element in DOM
$(document).ready(function() {
$('.open-popup-link').magnificPopup({
type:'inline',
midClick: true // allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source.
});
});
//audio
var num = 0;
var hiddenPlayer = $('#hidden-player');
var player = $('#player');
var title = $('.title');
var artist = $('.artist');
var cover = $('.coverr');

function secondsTimeSpanToHMS(s) {
var h = Math.floor(s / 3600); //Get whole hours
s -= h * 3600;
var m = Math.floor(s / 60); //Get remaining minutes
s -= m * 60;
return h + ":" + (m < 10 ? '0' + m : m) + ":" + (s < 10 ? '0' + s : s); //zero padding on minutes and seconds
};

songs = [{
  src: "https://k003.kiwi6.com/hotlink/kl9ks5jrd2/Oddisee_-_Fast_Lane_Speedin_Remix_by_Kristjan_Vool_.mp3",
  title: "Fast Lane Speedin'",
  artist: "Oddisee",
  coverart: "http://static.djbooth.net/pics-features/oddisee-art-thumb.jpg"
},

{
  src: "https://k003.kiwi6.com/hotlink/4vtefws0vt/Andy_Mineo_-_Superhuman_Remix_by_Kristjan_Vool_.mp3",
  title: "Superhuman",
  artist: "Andy Mineo",
  coverart: "http://static.djbooth.net/pics-artist/andy-mineo.jpg"
}
];

var initSongSrc = songs[0].src;
var initSongTitle = songs[0].title;
var initSongArtist = songs[0].artist;
var initSongCover = songs[0].coverart;

hiddenPlayer.attr("src", initSongSrc);
title.html(initSongTitle);
artist.html(initSongArtist);
cover.attr('src', initSongCover);

hiddenPlayer.attr('order', '0');
hiddenPlayer[0].onloadedmetadata = function() {
var dur = hiddenPlayer[0].duration;
var songLength = secondsTimeSpanToHMS(dur)
var songLengthParse = songLength.split(".")[0];
$('.time-finish').html(songLengthParse);
};

var items = songs.length - 1;

$('.next').on('click', function() {
var songOrder = hiddenPlayer.attr('order');

if (items == songOrder) {
  num = 0;
  var songSrc = songs[0].src;
  var songTitle = songs[0].title;
  var songArtist = songs[0].artist;
  var songCover = songs[0].coverart;
  hiddenPlayer.attr('order', '0');
  hiddenPlayer.attr('src', songSrc).trigger('play');
  title.html(songTitle);
  artist.html(songArtist);
  cover.attr('src', songCover);
} else {
  console.log(songOrder);
  num += 1;
  var songSrc = songs[num].src;
  var songTitle = songs[num].title;
  var songArtist = songs[num].artist;
  var songCover = songs[num].coverart;
  hiddenPlayer.attr('src', songSrc).trigger('play');
  title.html(songTitle);
  artist.html(songArtist);
  cover.attr('src', songCover);
  hiddenPlayer.attr('order', num);
}
});

$('.prev').on('click', function() {
var songOrder = hiddenPlayer.attr('order');

if (songOrder == 0) {
  num = items;
  var songSrc = songs[items].src;
  var songTitle = songs[items].title;
  var songArtist = songs[items].artist;
  hiddenPlayer.attr('order', items);
  hiddenPlayer.attr('src', songSrc).trigger('play');
  title.html(songTitle);
  artist.html(songArtist);
} else {
  num -= 1;
  var songSrc = songs[num].src;
  var songTitle = songs[num].title;
  var songArtist = songs[num].artist;
  hiddenPlayer.attr('src', songSrc).trigger('play');
  title.html(songTitle);
  artist.html(songArtist);
  hiddenPlayer.attr('order', num);
}
});

$(".play-button").click(function() {
$(this).toggleClass("paused");
if ($(this).hasClass("paused")) {
  hiddenPlayer[0].pause();
} else {
  hiddenPlayer[0].play();
}
});

hiddenPlayer.on('timeupdate', function() {
var songLength = secondsTimeSpanToHMS(this.duration)
var songLengthParse = songLength.split(".")[0];
$('.time-finish').html(songLengthParse);

var songCurrent = secondsTimeSpanToHMS(this.currentTime)
var songCurrentParse = songCurrent.split(".")[0];
$('.time-now').html(songCurrentParse);
$('progress').attr("value", this.currentTime / this.duration);

if (!hiddenPlayer[0].paused) {
  $(".play-button").removeClass('paused');
  $('progress').css('cursor', 'pointer');
  
  
  $('progress').on('click', function(e) {
    var parentOffset = $(this).parent().offset(); 
    var relX = e.pageX - parentOffset.left;
    var percPos = relX * 100 / 355;
    var second = hiddenPlayer[0].duration * parseInt(percPos) / 100;
    console.log(second);
    hiddenPlayer[0].currentTime = second;
  })
}

if (this.currentTime == this.duration) {
  $('.next').trigger('click');
}
});
